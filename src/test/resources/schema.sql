create table CopyBuffers
(
    lID         INTEGER
        primary key autoincrement,
    lClipID     INTEGER,
    lCopyBuffer INTEGER
);
--
-- create table Data
-- (
--     lID                INTEGER
--         primary key autoincrement,
--     lParentID          INTEGER,
--     strClipBoardFormat TEXT,
--     ooData             BLOB
-- );
--
-- create unique index Data_ID
--     on Data (lID);
--
-- create index Data_ParentId_Format
--     on Data (lParentID, strClipBoardFormat collate NOCASE);
--
-- create table Main
-- (
--     lID                       INTEGER
--         primary key autoincrement,
--     lDate                     INTEGER,
--     mText                     TEXT,
--     lShortCut                 INTEGER,
--     lDontAutoDelete           INTEGER,
--     CRC                       INTEGER,
--     bIsGroup                  INTEGER,
--     lParentID                 INTEGER,
--     QuickPasteText            TEXT,
--     clipOrder                 REAL,
--     clipGroupOrder            REAL,
--     globalShortCut            INTEGER,
--     lastPasteDate             INTEGER,
--     stickyClipOrder           REAL,
--     stickyClipGroupOrder      REAL,
--     MoveToGroupShortCut       INTEGER,
--     GlobalMoveToGroupShortCut INTEGER
-- );
--
-- create index Main_ClipGroupOrder
--     on Main (clipGroupOrder desc);
--
-- create index Main_ClipOrder
--     on Main (clipOrder desc);
--
-- create unique index Main_ID
--     on Main (lID);
--
-- create index Main_InGroup
--     on Main (lParentID asc, bIsGroup asc, stickyClipGroupOrder desc, clipGroupOrder desc);
--
-- create index Main_IsGroup
--     on Main (bIsGroup desc);
--
-- create index Main_NoGroup
--     on Main (bIsGroup asc, stickyClipOrder desc, clipOrder desc);
--
-- create index Main_ParentId
--     on Main (lParentID desc);
--
-- create index Main_ShortCut
--     on Main (lShortCut desc);
--
-- CREATE TRIGGER delete_data_trigger
--     BEFORE DELETE
--     ON Main
--     FOR EACH ROW
-- BEGIN
-- INSERT INTO MainDeletes
-- VALUES (old.lID, datetime('now'));
-- END;
--
-- create table MainDeletes
-- (
--     clipID INTEGER,
--     modifiedDate
-- );
--
-- CREATE TRIGGER MainDeletes_delete_data_trigger
--     BEFORE DELETE
--     ON MainDeletes
--     FOR EACH ROW
-- BEGIN
-- DELETE
-- FROM CopyBuffers
-- WHERE lClipID = old.clipID;
-- DELETE
-- FROM Data
-- WHERE lParentID = old.clipID;
-- END;
--
-- create table Types
-- (
--     lID      INTEGER
--         primary key autoincrement,
--     TypeText TEXT
-- );
--
-- create table sqlite_master
-- (
--     type     text,
--     name     text,
--     tbl_name text,
--     rootpage int,
--     sql      text
-- );
--
-- create table sqlite_sequence
-- ( name,
--     seq
-- );
